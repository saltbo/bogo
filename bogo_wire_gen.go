// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package bogo

import (
	"github.com/google/wire"
)

// Injectors from bogo_injector.go:

func buildInjectors(config string) (*App, func(), error) {
	configConfig, err := ConfigConstructor(config)
	if err != nil {
		return nil, nil, err
	}
	routerInterface, err := RouterConstructor(configConfig)
	if err != nil {
		return nil, nil, err
	}
	databaseInterface, err := DatabaseConstructor(configConfig)
	if err != nil {
		return nil, nil, err
	}
	cacheInterface, err := CacheConstructor(configConfig)
	if err != nil {
		return nil, nil, err
	}
	loggerInterface, err := LoggerConstructor(configConfig)
	if err != nil {
		return nil, nil, err
	}
	app := &App{
		Config:   configConfig,
		Router:   routerInterface,
		Database: databaseInterface,
		Cache:    cacheInterface,
		Logger:   loggerInterface,
	}
	return app, func() {
	}, nil
}

// bogo_injector.go:

var InjectorSet = wire.NewSet(wire.Struct(new(App), "*"))
